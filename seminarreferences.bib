@inproceedings{norell:deptyped,
author = {Norell, Ulf},
year = {2009},
month = {01},
title = {Dependently Typed Programming in Agda},
journal = {TLDI 2009},
doi = {10.1007/978-3-642-04652-0_5}
}

@book{10.1145/2841316,
author = {Stump, Aaron},
title = {Verified Functional Programming in Agda},
year = {2016},
isbn = {9781970001273},
publisher = {Association for Computing Machinery and Morgan and Claypool}
}

@Book{plfa2019,
  author = {Philip Wadler and Wen Kokke},
  title  = {Programming Language Foundations in {A}gda},
  note   = {Available at \url{http://plfa.inf.ed.ac.uk/}},
  year   = 2019,
}

@misc{AgdaReadTheDocs,
  title = {{Agda Read the Docs}},
  howpublished = {\url{https://agda.readthedocs.io/en/v2.6.0.1/overview.html}},
  note = {Accessed: 2020-02-23}
}

@article{DBLP:journals/corr/Eisenberg16,
  author    = {Richard A. Eisenberg},
  title     = {Dependent Types in Haskell: Theory and Practice},
  journal   = {CoRR},
  volume    = {abs/1610.07978},
  year      = {2016},
  url       = {http://arxiv.org/abs/1610.07978},
  archivePrefix = {arXiv},
  eprint    = {1610.07978},
  timestamp = {Mon, 13 Aug 2018 16:47:17 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/Eisenberg16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{10.1145/3299711.3242756,
author = {Vazou, Niki and Breitner, Joachim and Kunkel, Rose and Van Horn, David and Hutton, Graham},
title = {Theorem Proving for All: Equational Reasoning in Liquid Haskell (Functional Pearl)},
year = {2018},
issue_date = {December 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {53},
number = {7},
issn = {0362-1340},
url = {https://doi.org/10.1145/3299711.3242756},
doi = {10.1145/3299711.3242756},
journal = {SIGPLAN Not.},
month = sep,
pages = {132–144},
numpages = {13},
keywords = {theorem proving, Haskell, program optimization, equational reasoning, Liquid Haskell}
}


@article{DBLP:journals/corr/abs-1711-03842,
  author    = {Niki Vazou and
               Anish Tondwalkar and
               Vikraman Choudhury and
               Ryan G. Scott and
               Ryan R. Newton and
               Philip Wadler and
               Ranjit Jhala},
  title     = {Refinement Reflection: Complete Verification with {SMT}},
  journal   = {CoRR},
  volume    = {abs/1711.03842},
  year      = {2017},
  url       = {http://arxiv.org/abs/1711.03842},
  archivePrefix = {arXiv},
  eprint    = {1711.03842},
  timestamp = {Mon, 13 Aug 2018 16:47:19 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1711-03842.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{JDK5,
  title = {{JDK 5.0 Java Programming Language-related APIS {\&} Developer Guides}},
  howpublished = {\url{https://docs.oracle.com/javase/1.5.0/docs/guide/language/index.html}},
  note = {Accessed: 2020-03-11}
}

@misc{dotnet20,
  title = {{Final official version of .NET Framework 2.0 is available for download!}},
  howpublished = {\url{https://docs.microsoft.com/en-us/archive/blogs/astebner/final-official-version-of-net-framework-2-0-is-available-for-download}},
  note = {Accessed: 2020-03-11}
}

@misc{AgdaReadTheDocsStructure,
  title = {{Lexical Structure - Agda 2.5.2 documentation}},
  howpublished = {\url{https://agda.readthedocs.io/en/v2.5.2/language/lexical-structure.html}},
  note = {Accessed: 2020-03-11}
}
@misc{notes_on_plfa,
  title = {{Notes on PLFA}},
  howpublished = {\url{https://cs.uwaterloo.ca/~plragde/842/handouts/notes.html}},
  note = {Accessed: 2020-03-19}
}

@article{10.1145/2699407,
author = {Wadler, Philip},
title = {Propositions as Types},
year = {2015},
issue_date = {November 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {58},
number = {12},
issn = {0001-0782},
url = {https://doi.org/10.1145/2699407},
doi = {10.1145/2699407},
journal = {Commun. ACM},
month = nov,
pages = {75–84},
numpages = {10}
}

@Article{Turner:jucs_10_7:total_functional_programming,
  author =     "D. A. Turner",
  title =      "Total Functional Programming",
  abstract =   "The driving idea of functional programming is to make programming more closely related to mathematics. A program in a functional language such as Haskell or Miranda consists of equations which are both computation rules and a basis for simple algebraic reasoning about the functions and data structures they define. The existing model of functional programming, although elegant and powerful, is compromised to a greater extent than is commonly recognised by the presence of partial functions. We consider a simple discipline of total functional programming designed to exclude the possibility of non-termination. Among other things this requires a type distinction between data, which is finite, and codata, which is potentially infinite.",
  journal =    j-jucs,
  year =       "2004",
  volume =     "10",
  number =     "7",
  pages =      "751--768",
  date =       "2004-07-28",
  month =      "jul",
  note =       "\url|http://www.jucs.org/jucs_10_7/total_functional_programming|"
}

@book{10.5555/1076265,
author = {Pierce, Benjamin C.},
title = {Advanced Topics in Types and Programming Languages},
year = {2004},
isbn = {0262162288},
publisher = {The MIT Press}
}
  

